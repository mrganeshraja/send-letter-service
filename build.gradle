plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.4.RELEASE'
  id 'org.flywaydb.flyway' version '5.0.7'
  id 'org.springframework.boot' version '1.5.10.RELEASE'
  id 'org.owasp.dependencycheck' version '3.1.2'
  id 'com.github.ben-manes.versions' version '0.17.0'
  id 'org.sonarqube' version '2.6.1'
  id 'info.solidsoft.pitest' version '1.3.0'
}

flyway {
  url = System.getenv('FLYWAY_URL')
  user = System.getenv('FLYWAY_USER')
  password = System.getenv('FLYWAY_PASSWORD')
  baselineOnMigrate = true
  baselineVersion = '000'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath

  environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
  environment("FTP_PRIVATE_KEY", file('src/integrationTest/resources/keypair').text)
  environment("FTP_PUBLIC_KEY", file('src/integrationTest/resources/keypair.pub').text)
  environment("ENCRYPTION_PUBLIC_KEY", file('src/integrationTest/resources/encryption/pubkey.asc').text)
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.7'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "5.8.1"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacoco {
  toolVersion = "0.8.1"
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
  }
}

project.tasks['sonarqube'].dependsOn test, integration
sonarqube {
  properties {
    property "sonar.projectName", "Reform :: Send Letter Service 2.0"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
    property 'sonar.coverage.exclusions', "**/config/**"
  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
}

dependencyManagement {
  dependencies {
    // openfeign imports 0.4.9 which imports io.netty 4.0.27.
    // reactivex 0.4.20 follows the release compatibility but still falls under owasp risk factor.
    // reactivex 0.4.20 uses io.netty 4.1.5 which is OK with owasp.
    // latest (1.4.4) spring cloud starter feign library does not update either of those
    dependencySet(group: 'io.reactivex', version: '0.4.20') {
      entry 'rxnetty'
      entry 'rxnetty-contexts'
      entry 'rxnetty-servo'
    }
    // we are already basing our work for jackson 2.9.4.
    // spring boot dependency management plugin downgrades
    // hystrix related libraries use 2.4.3 and not clear if plan to upgrade
    // bump to 2.9.5 because of https://nvd.nist.gov/vuln/detail/CVE-2018-7489
    dependencySet(group: 'com.fasterxml.jackson.core', version: '2.9.5') {
      entry 'jackson-annotations'
      entry 'jackson-core'
      entry 'jackson-databind'
    }
    // the url pattern of "" is not correctly handled in tomcat
    // it is possible for unauthorised users to gain access to web application resources that should have been protected
    // not bumping tomcat-annotations-api as it introduces way more vulnerabilities than 8.5.27
    dependencySet(group: 'org.apache.tomcat.embed', version: '8.5.29') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-websocket'
    }
  }
}

def springBootVersion = plugins.getPlugin('org.springframework.boot').class.package.implementationVersion

repositories {
  // until new projects get to jcenter
  maven {
    url  "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  jcenter()
}

def versions = [
  springfoxSwagger: '2.7.0',
  reformLogging: '2.2.1',
  logback: '1.2.3',
  hystrix: '1.4.0.RELEASE'
]

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: springBootVersion

  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'

  compile group: 'org.flywaydb', name: 'flyway-core', version: '5.0.7'
  compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'http-proxy-spring-boot-autoconfigure', version: '1.1.0'
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '0.6.0'
  compile group: 'uk.gov.hmcts.reform', name: 'reform-api-standards', version: '0.3.0'
  compile group: 'uk.gov.hmcts.reform', name: 'pdf-generator', version: '1.0.2'

  compile group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
  compile group: 'ch.qos.logback', name: 'logback-core', version: versions.logback

  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version: versions.hystrix
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix-dashboard', version: versions.hystrix

  compile group: 'com.hierynomus', name: 'sshj', version: '0.23.0'
  compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.8'
  compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'

  compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: springBootVersion
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  compile group: 'com.vladmihalcea', name: 'hibernate-types-5', version: '2.1.1'
  compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.55'
  compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.55'
  compile group: 'org.bouncycastle', name: 'bcpg-jdk15on', version: '1.59'

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
  testCompile group: 'com.google.guava', name: 'guava', version: '23.4-jre'
  testCompile group: 'org.apache.sshd', name: 'sshd-core', version: '1.7.0'
  testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
  testCompile group: 'org.apache.pdfbox', name: 'preflight', version: '2.0.8'

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath
  integrationTestCompile group: 'org.testcontainers', name: 'postgresql', version: '1.6.0'
  integrationTestCompile group: 'org.awaitility', name: 'awaitility', version: '3.1.0'

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'
  smokeTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'
  functionalTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
}

jar {
  archiveName 'send-letter-service.jar'

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
  baselineOnMigrate = true
  if (project.hasProperty("dburl")) {
    url = "jdbc:postgresql://${dburl}"
  }
}
